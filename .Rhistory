---
title: "HW3"
author: "SUNNY LEE"
date: "10/13/2020"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
## Problem 1: COVID-19
```{r}
covid <- read.csv("covid.csv")
```
1. Correctly format the dates in "Date.of.birth", "First.day.of.symptoms", "Date.of.outcome" and "Date.of.diagnosis".
```{r}
covid$Date.of.birth <- as.Date(covid$Date.of.birth)
covid$First.day.of.symptoms <- as.Date(covid$First.day.of.symptoms)
covid$Date.of.outcome <- as.Date(covid$Date.of.outcome)
covid$Date.of.diagnosis <- as.Date(covid$Date.of.diagnosis)
```
2. Format "Hospitalization.type", "Symptoms" and "Outcome" as factors and "Epidemiological.link…Notes" as character.
```{r}
covid$Hospitalization.type <- as.factor(covid$Hospitalization.type)
covid$Symptoms <- as.factor(covid$Symptoms)
covid$Outcome <- as.factor(covid$Outcome)
covid$Epidemiological.link...Notes <- as.character(covid$Epidemiological.link...Notes)
str(covid)
```
3. Create a three-dimensional table reporting the three factors from the previous question. Hint: use the function `table()` with the variables of interest.
```{r}
tbl <- table(covid$Hospitalization.type, covid$Outcome, covid$Symptoms)
tbl
```
4. Using the table object created in the previous question, subset it in order to create the following table.
```{r}
tbl[1:2, 2:3, 1]
```
5. Order the data based on the date of diagnosis (from first to most recent).
```{r}
covid <- covid[order(covid$Date.of.diagnosis), ]
head(covid)
```
6. Add a column that reports whether or not a case was asymptomatic AND in home isolation. Name the observation "Home_Asymptomatic" if the conditions apply and "Non_Home_Asymptomatic" if not and then produce a bar plot of this new variable.
```{r}
covid$Home_Asymptomatic <- ifelse(
covid$Symptoms == "Asymptomatic" & covid$Hospitalization.type == "Home isolation",
"Home_Asymptomatic", "Non_Home_Asymptomatic")
barplot(table(covid$Home_Asymptomatic), ylab = "Number of cases")
```
7. Count the number of cases of people born after 1981 and that have healed.
```{r}
sum(covid$Date.of.birth >= "1981-01-01" & covid$Outcome == "Healed")
```
8. Count the number of cases that are asymptomatic OR in home isolation (but not both) AND were born before 1982.
```{r}
sum(xor(covid$Symptoms == "Asymptomatic", covid$Hospitalization.type == "Home isolation") &
covid$Date.of.birth < "1982-01-01", na.rm = TRUE)
```
9. Create a new dataset including only the rows where "Epidemiological.link…Notes" includes the words "contact" OR "symptom" (or both). Hint: you can use the `grep()` function and `tolower()`.
```{r}
ind <- grep("contact|symptom", tolower(covid$Epidemiological.link...Notes))
covid2 <- covid[ind, ]
```
10. In the previous dataset add a column reporting the age (in years, therefore in integer format) of each patient as of October 2nd, 2020. Save this dataset into a .csv file and make it available on your GitHub repository for this assignment.
```{r}
age.in.days <- as.Date("2020-10-02") - covid2$Date.of.birth
covid2$Age.in.years <- as.integer(age.in.days / 365.242199)
write.csv(covid2, "covid2.csv", row.names = FALSE)
```
11. Produce a pie chart for the type of hospitalization for cases born between 1960 and 1980.
```{r}
covid3 <- covid[covid$Date.of.birth >= "1960-01-01" & covid$Date.of.birth <= "1980-12-31", ]
pie(table(covid3$Hospitalization.type),
main = "Type of hospitalization for cases born between 1960 and 1980")
```
## Problem 2: Salary
1. Load the data and check the formatting of the variables.
```{r}
adult <- read.csv("adult.csv")
str(adult)
```
2. Rename the last column (currently called "NA") containing the dichotomous salary information. Assign the name `salary` to it.
```{r}
names(adult)[ncol(adult)] <- "salary"
```
3. The values in `salary` have a space in front of them (e.g. " >50K"): remove the space from all values (hint:you can use `substring()`).
```{r}
adult$salary <- substring(adult$salary, 2)
```
4. Again, in the variable `salary`, replace ">50K" with the value 1 and "<=50K" with 0. Make sure to format it as a factor with two levels.
```{r}
adult$salary <- ifelse(adult$salary == ">50K", 1, 0)
adult$salary <- factor(adult$salary)
```
5. Use the `glm()` function to estimate this logistic model. Only specify the arguments `formula = salary ~ .`, `data` and `family = binomial`. Save the result of the estimation in an object called `fit`.
```{r}
fit <- glm(formula = salary ~ ., data = adult, family = binomial)
```
6. Using the information in `fit` (hint: you can use the functions `coef()` and `summary()` to extract information), create a dataframe collecting:
1) The names of the variables (names of the rows of the dataframe);
2) The value of the coefficients (first column);
3) A logical vector stating which coefficients are positive (second column);
4) The p-values (third column).
```{r}
df_fit <- data.frame(coefficient = summary(fit)$coefficients[, 1],
positive = summary(fit)$coefficients[, 1] > 0,
p_value = summary(fit)$coefficients[, 4])
df_fit
```
7. Subset the dataframe created in the previous question to only show the rows where the p-values are strictly smaller than 0.05. Knowing that (i) the remaining rows are statistically significant and that (ii) positive coefficients contribute to increase the probability of a salary larger than $50,000 (the opposite for negative values), comment on those variables that negatively contribute to salary.
```{r}
df_fit[df_fit$p_value < 0.05, ]
```
Education "7th-8th"; marital status "Never-married"; occupation "Farming-fishing", "Handlers-cleaners", "Other-service", "Priv-house-serv"; relationship "Own-child" and native country "Columbia" and "South" negatively contribute to salary.
## Bonus Problem: Map
```{r}
library(maps)
library(leaflet)
df <- data.frame(Teams = c("Real Madrid", "FC Barcelona", "Atlético Madrid",
"Athletic Bilbao", "Valencia"),
Champions = c(34, 26, 10, 8, 6),
City = c("Madrid", "Barcelona", "Madrid", "Bilbao", "Valencia"))
# filter world.cities data frame to include only relevant columns and cities in Spain
cities <- subset(world.cities, country.etc == "Spain", c(name, lat, long))
# add columns with latitude longitude by merging with cities dataframe
df <- merge(df, cities, by.x = "City", by.y = "name")
# create variable with popup text
popup <- paste0("<b>", df$Teams, "</b> <br>", df$Champions)
# paste together popups for the same city
popups_df <- aggregate(popup ~ City, data = df, paste0, collapse = "<br>")
# merge popups to the original df
df <- merge(df, popups_df, by = "City")
df %>%
# create map
leaflet() %>%
addTiles() %>%
# add points
addCircleMarkers(~long, ~lat, radius = ~Champions) %>%
# add popups
addPopups(~long, ~lat, ~popup,
options = popupOptions(closeButton = FALSE, closeOnClick = FALSE))
```
knitr::opts_chunk$set(echo = TRUE)
```{r}
## Problem 1: COVID-19
```{r}
covid <- read.csv("C:\Users\leesu\Box Sync\COURSE\2020 FA\STAT 6210 R\covid.csv")
```
covid <- read.csv("C:\Users\leesu\Box Sync\COURSE\2020 FA\STAT 6210 R\covid.csv")
```{r}
knitr::opts_chunk$set(echo = TRUE)
setwd(C:\Users\leesu\Box Sync\COURSE\2020 FA\STAT 6210 R)
---
title: "HW3"
author: "SUNNY LEE"
date: "10/13/2020"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
## Problem 1: COVID-19
```{r}
covid <- read.csv("covid.csv")
```
1. Correctly format the dates in "Date.of.birth", "First.day.of.symptoms", "Date.of.outcome" and "Date.of.diagnosis".
```{r}
covid$Date.of.birth <- as.Date(covid$Date.of.birth)
covid$First.day.of.symptoms <- as.Date(covid$First.day.of.symptoms)
covid$Date.of.outcome <- as.Date(covid$Date.of.outcome)
covid$Date.of.diagnosis <- as.Date(covid$Date.of.diagnosis)
```
2. Format "Hospitalization.type", "Symptoms" and "Outcome" as factors and "Epidemiological.link…Notes" as character.
```{r}
covid$Hospitalization.type <- as.factor(covid$Hospitalization.type)
covid$Symptoms <- as.factor(covid$Symptoms)
covid$Outcome <- as.factor(covid$Outcome)
covid$Epidemiological.link...Notes <- as.character(covid$Epidemiological.link...Notes)
str(covid)
```
3. Create a three-dimensional table reporting the three factors from the previous question. Hint: use the function `table()` with the variables of interest.
```{r}
tbl <- table(covid$Hospitalization.type, covid$Outcome, covid$Symptoms)
tbl
```
4. Using the table object created in the previous question, subset it in order to create the following table.
```{r}
tbl[1:2, 2:3, 1]
```
5. Order the data based on the date of diagnosis (from first to most recent).
```{r}
covid <- covid[order(covid$Date.of.diagnosis), ]
head(covid)
```
6. Add a column that reports whether or not a case was asymptomatic AND in home isolation. Name the observation "Home_Asymptomatic" if the conditions apply and "Non_Home_Asymptomatic" if not and then produce a bar plot of this new variable.
```{r}
covid$Home_Asymptomatic <- ifelse(
covid$Symptoms == "Asymptomatic" & covid$Hospitalization.type == "Home isolation",
"Home_Asymptomatic", "Non_Home_Asymptomatic")
barplot(table(covid$Home_Asymptomatic), ylab = "Number of cases")
```
7. Count the number of cases of people born after 1981 and that have healed.
```{r}
sum(covid$Date.of.birth >= "1981-01-01" & covid$Outcome == "Healed")
```
8. Count the number of cases that are asymptomatic OR in home isolation (but not both) AND were born before 1982.
```{r}
sum(xor(covid$Symptoms == "Asymptomatic", covid$Hospitalization.type == "Home isolation") &
covid$Date.of.birth < "1982-01-01", na.rm = TRUE)
```
9. Create a new dataset including only the rows where "Epidemiological.link…Notes" includes the words "contact" OR "symptom" (or both). Hint: you can use the `grep()` function and `tolower()`.
```{r}
ind <- grep("contact|symptom", tolower(covid$Epidemiological.link...Notes))
covid2 <- covid[ind, ]
```
10. In the previous dataset add a column reporting the age (in years, therefore in integer format) of each patient as of October 2nd, 2020. Save this dataset into a .csv file and make it available on your GitHub repository for this assignment.
```{r}
age.in.days <- as.Date("2020-10-02") - covid2$Date.of.birth
covid2$Age.in.years <- as.integer(age.in.days / 365.242199)
write.csv(covid2, "covid2.csv", row.names = FALSE)
```
11. Produce a pie chart for the type of hospitalization for cases born between 1960 and 1980.
```{r}
covid3 <- covid[covid$Date.of.birth >= "1960-01-01" & covid$Date.of.birth <= "1980-12-31", ]
pie(table(covid3$Hospitalization.type),
main = "Type of hospitalization for cases born between 1960 and 1980")
```
## Problem 2: Salary
1. Load the data and check the formatting of the variables.
```{r}
adult <- read.csv("adult.csv")
str(adult)
```
2. Rename the last column (currently called "NA") containing the dichotomous salary information. Assign the name `salary` to it.
```{r}
names(adult)[ncol(adult)] <- "salary"
```
3. The values in `salary` have a space in front of them (e.g. " >50K"): remove the space from all values (hint:you can use `substring()`).
```{r}
adult$salary <- substring(adult$salary, 2)
```
4. Again, in the variable `salary`, replace ">50K" with the value 1 and "<=50K" with 0. Make sure to format it as a factor with two levels.
```{r}
adult$salary <- ifelse(adult$salary == ">50K", 1, 0)
adult$salary <- factor(adult$salary)
```
5. Use the `glm()` function to estimate this logistic model. Only specify the arguments `formula = salary ~ .`, `data` and `family = binomial`. Save the result of the estimation in an object called `fit`.
```{r}
fit <- glm(formula = salary ~ ., data = adult, family = binomial)
```
6. Using the information in `fit` (hint: you can use the functions `coef()` and `summary()` to extract information), create a dataframe collecting:
1) The names of the variables (names of the rows of the dataframe);
2) The value of the coefficients (first column);
3) A logical vector stating which coefficients are positive (second column);
4) The p-values (third column).
```{r}
df_fit <- data.frame(coefficient = summary(fit)$coefficients[, 1],
positive = summary(fit)$coefficients[, 1] > 0,
p_value = summary(fit)$coefficients[, 4])
df_fit
```
7. Subset the dataframe created in the previous question to only show the rows where the p-values are strictly smaller than 0.05. Knowing that (i) the remaining rows are statistically significant and that (ii) positive coefficients contribute to increase the probability of a salary larger than $50,000 (the opposite for negative values), comment on those variables that negatively contribute to salary.
```{r}
df_fit[df_fit$p_value < 0.05, ]
```
Education "7th-8th"; marital status "Never-married"; occupation "Farming-fishing", "Handlers-cleaners", "Other-service", "Priv-house-serv"; relationship "Own-child" and native country "Columbia" and "South" negatively contribute to salary.
## Bonus Problem: Map
```{r}
library(maps)
library(leaflet)
df <- data.frame(Teams = c("Real Madrid", "FC Barcelona", "Atlético Madrid",
"Athletic Bilbao", "Valencia"),
Champions = c(34, 26, 10, 8, 6),
City = c("Madrid", "Barcelona", "Madrid", "Bilbao", "Valencia"))
# filter world.cities data frame to include only relevant columns and cities in Spain
cities <- subset(world.cities, country.etc == "Spain", c(name, lat, long))
# add columns with latitude longitude by merging with cities dataframe
df <- merge(df, cities, by.x = "City", by.y = "name")
# create variable with popup text
popup <- paste0("<b>", df$Teams, "</b> <br>", df$Champions)
# paste together popups for the same city
popups_df <- aggregate(popup ~ City, data = df, paste0, collapse = "<br>")
# merge popups to the original df
df <- merge(df, popups_df, by = "City")
df %>%
# create map
leaflet() %>%
addTiles() %>%
# add points
addCircleMarkers(~long, ~lat, radius = ~Champions) %>%
# add popups
addPopups(~long, ~lat, ~popup,
options = popupOptions(closeButton = FALSE, closeOnClick = FALSE))
```
---
title: "HW3"
author: "SUNNY LEE"
date: "10/13/2020"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
## Problem 1: COVID-19
```{r}
covid <- read.csv("covid.csv")
```
1. Correctly format the dates in "Date.of.birth", "First.day.of.symptoms", "Date.of.outcome" and "Date.of.diagnosis".
```{r}
covid$Date.of.birth <- as.Date(covid$Date.of.birth)
covid$First.day.of.symptoms <- as.Date(covid$First.day.of.symptoms)
covid$Date.of.outcome <- as.Date(covid$Date.of.outcome)
covid$Date.of.diagnosis <- as.Date(covid$Date.of.diagnosis)
```
2. Format "Hospitalization.type", "Symptoms" and "Outcome" as factors and "Epidemiological.link…Notes" as character.
```{r}
covid$Hospitalization.type <- as.factor(covid$Hospitalization.type)
covid$Symptoms <- as.factor(covid$Symptoms)
covid$Outcome <- as.factor(covid$Outcome)
covid$Epidemiological.link...Notes <- as.character(covid$Epidemiological.link...Notes)
str(covid)
```
3. Create a three-dimensional table reporting the three factors from the previous question. Hint: use the function `table()` with the variables of interest.
```{r}
tbl <- table(covid$Hospitalization.type, covid$Outcome, covid$Symptoms)
tbl
```
4. Using the table object created in the previous question, subset it in order to create the following table.
```{r}
tbl[1:2, 2:3, 1]
```
5. Order the data based on the date of diagnosis (from first to most recent).
```{r}
covid <- covid[order(covid$Date.of.diagnosis), ]
head(covid)
```
6. Add a column that reports whether or not a case was asymptomatic AND in home isolation. Name the observation "Home_Asymptomatic" if the conditions apply and "Non_Home_Asymptomatic" if not and then produce a bar plot of this new variable.
```{r}
covid$Home_Asymptomatic <- ifelse(
covid$Symptoms == "Asymptomatic" & covid$Hospitalization.type == "Home isolation",
"Home_Asymptomatic", "Non_Home_Asymptomatic")
barplot(table(covid$Home_Asymptomatic), ylab = "Number of cases")
```
7. Count the number of cases of people born after 1981 and that have healed.
```{r}
sum(covid$Date.of.birth >= "1981-01-01" & covid$Outcome == "Healed")
```
8. Count the number of cases that are asymptomatic OR in home isolation (but not both) AND were born before 1982.
```{r}
sum(xor(covid$Symptoms == "Asymptomatic", covid$Hospitalization.type == "Home isolation") &
covid$Date.of.birth < "1982-01-01", na.rm = TRUE)
```
9. Create a new dataset including only the rows where "Epidemiological.link…Notes" includes the words "contact" OR "symptom" (or both). Hint: you can use the `grep()` function and `tolower()`.
```{r}
ind <- grep("contact|symptom", tolower(covid$Epidemiological.link...Notes))
covid2 <- covid[ind, ]
```
10. In the previous dataset add a column reporting the age (in years, therefore in integer format) of each patient as of October 2nd, 2020. Save this dataset into a .csv file and make it available on your GitHub repository for this assignment.
```{r}
age.in.days <- as.Date("2020-10-02") - covid2$Date.of.birth
covid2$Age.in.years <- as.integer(age.in.days / 365.242199)
write.csv(covid2, "covid2.csv", row.names = FALSE)
```
11. Produce a pie chart for the type of hospitalization for cases born between 1960 and 1980.
```{r}
covid3 <- covid[covid$Date.of.birth >= "1960-01-01" & covid$Date.of.birth <= "1980-12-31", ]
pie(table(covid3$Hospitalization.type),
main = "Type of hospitalization for cases born between 1960 and 1980")
```
## Problem 2: Salary
1. Load the data and check the formatting of the variables.
```{r}
adult <- read.csv("adult.csv")
str(adult)
```
2. Rename the last column (currently called "NA") containing the dichotomous salary information. Assign the name `salary` to it.
```{r}
names(adult)[ncol(adult)] <- "salary"
```
3. The values in `salary` have a space in front of them (e.g. " >50K"): remove the space from all values (hint:you can use `substring()`).
```{r}
adult$salary <- substring(adult$salary, 2)
```
4. Again, in the variable `salary`, replace ">50K" with the value 1 and "<=50K" with 0. Make sure to format it as a factor with two levels.
```{r}
adult$salary <- ifelse(adult$salary == ">50K", 1, 0)
adult$salary <- factor(adult$salary)
```
5. Use the `glm()` function to estimate this logistic model. Only specify the arguments `formula = salary ~ .`, `data` and `family = binomial`. Save the result of the estimation in an object called `fit`.
```{r}
fit <- glm(formula = salary ~ ., data = adult, family = binomial)
```
6. Using the information in `fit` (hint: you can use the functions `coef()` and `summary()` to extract information), create a dataframe collecting:
1) The names of the variables (names of the rows of the dataframe);
2) The value of the coefficients (first column);
3) A logical vector stating which coefficients are positive (second column);
4) The p-values (third column).
```{r}
df_fit <- data.frame(coefficient = summary(fit)$coefficients[, 1],
positive = summary(fit)$coefficients[, 1] > 0,
p_value = summary(fit)$coefficients[, 4])
df_fit
```
7. Subset the dataframe created in the previous question to only show the rows where the p-values are strictly smaller than 0.05. Knowing that (i) the remaining rows are statistically significant and that (ii) positive coefficients contribute to increase the probability of a salary larger than $50,000 (the opposite for negative values), comment on those variables that negatively contribute to salary.
```{r}
df_fit[df_fit$p_value < 0.05, ]
```
Education "7th-8th"; marital status "Never-married"; occupation "Farming-fishing", "Handlers-cleaners", "Other-service", "Priv-house-serv"; relationship "Own-child" and native country "Columbia" and "South" negatively contribute to salary.
## Bonus Problem: Map
```{r}
library(maps)
library(leaflet)
df <- data.frame(Teams = c("Real Madrid", "FC Barcelona", "Atlético Madrid",
"Athletic Bilbao", "Valencia"),
Champions = c(34, 26, 10, 8, 6),
City = c("Madrid", "Barcelona", "Madrid", "Bilbao", "Valencia"))
# filter world.cities data frame to include only relevant columns and cities in Spain
cities <- subset(world.cities, country.etc == "Spain", c(name, lat, long))
# add columns with latitude longitude by merging with cities dataframe
df <- merge(df, cities, by.x = "City", by.y = "name")
# create variable with popup text
popup <- paste0("<b>", df$Teams, "</b> <br>", df$Champions)
# paste together popups for the same city
popups_df <- aggregate(popup ~ City, data = df, paste0, collapse = "<br>")
# merge popups to the original df
df <- merge(df, popups_df, by = "City")
df %>%
# create map
leaflet() %>%
addTiles() %>%
# add points
addCircleMarkers(~long, ~lat, radius = ~Champions) %>%
# add popups
addPopups(~long, ~lat, ~popup,
options = popupOptions(closeButton = FALSE, closeOnClick = FALSE))
```
